name: "Build for Release"

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    name: Build Release for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.13.1
        with:
          cmake-version: '3.26'

      - name: Configure CMake
        run: cmake .

      - name: Build Project
        run: cmake --build . --config release

      - name: Remove Dumb Windows Garbage
        run: |
          move ./bin/release/dll/Release/lib-jsxer.dll ./bin/release/dll/
          rm -r ./bin/release/dll/Release
          move ./bin/release/static/Release/libjsxer.lib ./bin/release/static/
          rm -r ./bin/release/static/Release
          move ./bin/release/Release/jsxer.exe ./bin/release/
          rm -r ./bin/release/Release

      - name: Zip Artifacts
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: ${{ format('jsxer-{0}-Windows.zip', github.ref_name) }}
          path: './bin/release/'

      - name: Attach Build Artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: jsxer-${{  github.ref_name }}-Windows.zip

  build-macos:
    name: Build Release for macOS
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.13.1
        with:
          cmake-version: '3.25.2'

      - name: Configure CMake
        run: cmake .

      - name: Build Project
        run: cmake --build . --config release

      - name: Zip Artifacts
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: ${{ format('jsxer-{0}-macOS.zip', github.ref_name) }}
          path: './bin/release/'

      - name: Attach Build Artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: jsxer-${{  github.ref_name }}-macOS.zip

